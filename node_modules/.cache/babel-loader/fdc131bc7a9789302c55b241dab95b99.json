{"ast":null,"code":"export default function todosReducer(state = initialState, action) {\n  const initialState = {\n    todos: [{\n      id: 0,\n      text: \"Learn React\",\n      completed: true\n    }, {\n      id: 1,\n      text: \"Learn Redux\",\n      completed: false,\n      color: \"purple\"\n    }, {\n      id: 2,\n      text: \"Build something fun!\",\n      completed: false,\n      color: \"blue\"\n    }],\n    filters: {\n      status: \"All\",\n      colors: []\n    }\n  };\n\n  switch (action.type) {\n    case 'todos/todoAdded':\n      {\n        // Can return just the new todos array - no extra object around it\n        return [...state, {\n          id: nextTodoId(state),\n          text: action.payload,\n          completed: false\n        }];\n      }\n\n    case 'todos/todoToggled':\n      {\n        return state.map(todo => {\n          if (todo.id !== action.payload) {\n            return todo;\n          }\n\n          return { ...todo,\n            completed: !todo.completed\n          };\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/angelapizarras/Documents/Projects/roundSquare/src/features/toDos/toDosSlice.js"],"names":["todosReducer","state","initialState","action","todos","id","text","completed","color","filters","status","colors","type","nextTodoId","payload","map","todo"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAK,GAAGC,YAA9B,EAA4CC,MAA5C,EAAoD;AAC/D,QAAMD,YAAY,GAAG;AACjBE,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,aAAf;AAA8BC,MAAAA,SAAS,EAAE;AAAzC,KADK,EAEL;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,aAAf;AAA8BC,MAAAA,SAAS,EAAE,KAAzC;AAAgDC,MAAAA,KAAK,EAAE;AAAvD,KAFK,EAGL;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,sBAAf;AAAuCC,MAAAA,SAAS,EAAE,KAAlD;AAAyDC,MAAAA,KAAK,EAAE;AAAhE,KAHK,CADU;AAMjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,MAAM,EAAE;AAFD;AANQ,GAArB;;AAYA,UAAQR,MAAM,CAACS,IAAf;AACE,SAAK,iBAAL;AAAwB;AACtB;AACA,eAAO,CACL,GAAGX,KADE,EAEL;AACEI,UAAAA,EAAE,EAAEQ,UAAU,CAACZ,KAAD,CADhB;AAEEK,UAAAA,IAAI,EAAEH,MAAM,CAACW,OAFf;AAGEP,UAAAA,SAAS,EAAE;AAHb,SAFK,CAAP;AAQD;;AACD,SAAK,mBAAL;AAA0B;AACxB,eAAON,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAI;AACvB,cAAIA,IAAI,CAACX,EAAL,KAAYF,MAAM,CAACW,OAAvB,EAAgC;AAC9B,mBAAOE,IAAP;AACD;;AAED,iBAAO,EACL,GAAGA,IADE;AAELT,YAAAA,SAAS,EAAE,CAACS,IAAI,CAACT;AAFZ,WAAP;AAID,SATM,CAAP;AAUD;;AACD;AACE,aAAON,KAAP;AAzBJ;AA2BD","sourcesContent":["export default function todosReducer(state = initialState, action) {\n    const initialState = {\n        todos: [\n          { id: 0, text: \"Learn React\", completed: true },\n          { id: 1, text: \"Learn Redux\", completed: false, color: \"purple\" },\n          { id: 2, text: \"Build something fun!\", completed: false, color: \"blue\" }\n        ],\n        filters: {\n          status: \"All\",\n          colors: []\n        }\n      };\n      \n    switch (action.type) {\n      case 'todos/todoAdded': {\n        // Can return just the new todos array - no extra object around it\n        return [\n          ...state,\n          {\n            id: nextTodoId(state),\n            text: action.payload,\n            completed: false\n          }\n        ]\n      }\n      case 'todos/todoToggled': {\n        return state.map(todo => {\n          if (todo.id !== action.payload) {\n            return todo\n          }\n  \n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        })\n      }\n      default:\n        return state\n    }\n  }"]},"metadata":{},"sourceType":"module"}