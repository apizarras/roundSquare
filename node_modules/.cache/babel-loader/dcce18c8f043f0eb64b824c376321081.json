{"ast":null,"code":"var _jsxFileName = \"/Users/angelapizarras/Documents/Projects/roundSquare/src/features/toDos/toDos.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { todosReducer } from './toDosSlice';\nimport styles from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ToDos() {\n  const initialState = {\n    todos: [{\n      id: 0,\n      text: \"Learn React\",\n      completed: true\n    }, {\n      id: 1,\n      text: \"Learn Redux\",\n      completed: false,\n      color: \"purple\"\n    }, {\n      id: 2,\n      text: \"Build something fun!\",\n      completed: false,\n      color: \"blue\"\n    }],\n    filters: {\n      status: \"All\",\n      colors: []\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Increment value\",\n        onClick: () => dispatch(increment()),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.value,\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Decrement value\",\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementByAmount(Number(incrementAmount) || 0)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.asyncButton,\n        onClick: () => dispatch(incrementAsync(Number(incrementAmount) || 0)),\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_c = ToDos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDos\");","map":{"version":3,"sources":["/Users/angelapizarras/Documents/Projects/roundSquare/src/features/toDos/toDos.js"],"names":["React","useState","useSelector","useDispatch","todosReducer","styles","ToDos","initialState","todos","id","text","completed","color","filters","status","colors","row","button","dispatch","increment","value","count","decrement","textbox","incrementAmount","e","setIncrementAmount","target","incrementByAmount","Number","asyncButton","incrementAsync"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEE,OAAO,SAASC,KAAT,GAAiB;AACtB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,aAAf;AAA8BC,MAAAA,SAAS,EAAE;AAAzC,KADK,EAEL;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,aAAf;AAA8BC,MAAAA,SAAS,EAAE,KAAzC;AAAgDC,MAAAA,KAAK,EAAE;AAAvD,KAFK,EAGL;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,sBAAf;AAAuCC,MAAAA,SAAS,EAAE,KAAlD;AAAyDC,MAAAA,KAAK,EAAE;AAAhE,KAHK,CADY;AAMnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,MAAM,EAAE;AAFD;AANU,GAArB;AAYA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,GAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEX,MAAM,CAACY,MADpB;AAEE,sBAAW,iBAFb;AAGE,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACC,SAAS,EAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAM,QAAA,SAAS,EAAEd,MAAM,CAACe,KAAxB;AAAA,kBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AACE,QAAA,SAAS,EAAEhB,MAAM,CAACY,MADpB;AAEE,sBAAW,iBAFb;AAGE,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACI,SAAS,EAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,SAAS,EAAEjB,MAAM,CAACW,GAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEX,MAAM,CAACkB,OADpB;AAEE,sBAAW,sBAFb;AAGE,QAAA,KAAK,EAAEC,eAHT;AAIE,QAAA,QAAQ,EAAEC,CAAC,IAAIC,kBAAkB,CAACD,CAAC,CAACE,MAAF,CAASP,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,SAAS,EAAEf,MAAM,CAACY,MADpB;AAEE,QAAA,OAAO,EAAE,MACPC,QAAQ,CAACU,iBAAiB,CAACC,MAAM,CAACL,eAAD,CAAN,IAA2B,CAA5B,CAAlB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE;AACE,QAAA,SAAS,EAAEnB,MAAM,CAACyB,WADpB;AAEE,QAAA,OAAO,EAAE,MAAMZ,QAAQ,CAACa,cAAc,CAACF,MAAM,CAACL,eAAD,CAAN,IAA2B,CAA5B,CAAf,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;KAxDelB,K","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { todosReducer } from './toDosSlice';\nimport styles from './Counter.module.css';\n\n  export function ToDos() {\n    const initialState = {\n      todos: [\n        { id: 0, text: \"Learn React\", completed: true },\n        { id: 1, text: \"Learn Redux\", completed: false, color: \"purple\" },\n        { id: 2, text: \"Build something fun!\", completed: false, color: \"blue\" }\n      ],\n      filters: {\n        status: \"All\",\n        colors: []\n      }\n    };\n  \n    return (\n      <div>\n        <div className={styles.row}>\n          <button\n            className={styles.button}\n            aria-label=\"Increment value\"\n            onClick={() => dispatch(increment())}\n          >\n            +\n          </button>\n          <span className={styles.value}>{count}</span>\n          <button\n            className={styles.button}\n            aria-label=\"Decrement value\"\n            onClick={() => dispatch(decrement())}\n          >\n            -\n          </button>\n        </div>\n        <div className={styles.row}>\n          <input\n            className={styles.textbox}\n            aria-label=\"Set increment amount\"\n            value={incrementAmount}\n            onChange={e => setIncrementAmount(e.target.value)}\n          />\n          <button\n            className={styles.button}\n            onClick={() =>\n              dispatch(incrementByAmount(Number(incrementAmount) || 0))\n            }\n          >\n            Add Amount\n          </button>\n          <button\n            className={styles.asyncButton}\n            onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\n          >\n            Add Async\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n\n  "]},"metadata":{},"sourceType":"module"}